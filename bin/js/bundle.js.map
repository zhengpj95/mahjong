{"version":3,"file":"bundle.js","sources":["../../src/ui/layaMaxUI.ts","../../src/base/astar/AStar.ts","../../src/base/astar/AStarConst.ts","../../src/base/astar/Grid.ts","../../src/base/astar/AStarMgr.ts","../../src/modules/mahjong/MahjongModel.ts","../../src/modules/mahjong/MahjongProxy.ts","../../src/base/utils/ComUtils.ts","../../src/modules/mahjong/MahjongMdr.ts","../../src/GameConfig.ts","../../src/Main.ts"],"sourcesContent":["/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\nimport View=Laya.View;\nimport Dialog=Laya.Dialog;\nimport Scene=Laya.Scene;\nvar REG: Function = Laya.ClassUtils.regClass;\nexport module ui.modules.mahjong {\n    export class MahjongUI extends Scene {\n        constructor(){ super()}\n        createChildren():void {\n            super.createChildren();\n            this.loadScene(\"modules/mahjong/Mahjong\");\n        }\n    }\n    REG(\"ui.modules.mahjong.MahjongUI\",MahjongUI);\n    export class MainInfoUI extends Scene {\n        constructor(){ super()}\n        createChildren():void {\n            super.createChildren();\n            this.loadScene(\"modules/mahjong/MainInfo\");\n        }\n    }\n    REG(\"ui.modules.mahjong.MainInfoUI\",MainInfoUI);\n}","import { Grid } from \"./Grid\";\r\nimport { GridPoint } from \"./AStarConst\";\r\n\r\n/**\r\n * 表示路径搜索中的节点信息\r\n */\r\nclass PathNode {\r\n  public position: GridPoint; // 当前节点的位置 [x, y]\r\n  public g: number;           // 从起点到当前节点的实际代价\r\n  public h: number;           // 当前节点到目标节点的启发式估计代价\r\n  public parent: PathNode | null; // 当前节点的父节点，用于回溯路径\r\n  public direction: GridPoint | null; // 从父节点到当前节点的移动方向\r\n\r\n  constructor(position: GridPoint, g: number, h: number, parent: PathNode | null = null, direction: GridPoint | null = null) {\r\n    this.position = position;\r\n    this.g = g;\r\n    this.h = h;\r\n    this.parent = parent;\r\n    this.direction = direction;\r\n    if (this.getTurnCount()) {\r\n      this.g += 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取节点的总代价 f = g + h\r\n   */\r\n  public get f(): number {\r\n    return this.g + this.h;\r\n  }\r\n\r\n  /**\r\n   * 计算当前节点的拐点数\r\n   */\r\n  public getTurnCount(): number {\r\n    if (!this.parent || !this.parent.direction || !this.direction) {\r\n      return 0; // 起点没有拐点\r\n    }\r\n    return this.direction.toString() !== this.parent.direction.toString() ? 1 : 0;\r\n  }\r\n}\r\n\r\n/**\r\n * A* 算法类\r\n */\r\nexport class AStar {\r\n  private _grid: Grid; // 网格实例\r\n\r\n  /**\r\n   * 构造函数\r\n   * @param grid - Grid 实例\r\n   */\r\n  constructor(grid: Grid) {\r\n    this._grid = grid;\r\n  }\r\n\r\n  /**\r\n   * 启发式函数，用于估计从某个点到目标点的代价\r\n   * 此处使用曼哈顿距离\r\n   * @param a - 当前点 [x, y]\r\n   * @param b - 目标点 [x, y]\r\n   * @returns 曼哈顿距离\r\n   */\r\n  private heuristic(a: GridPoint, b: GridPoint): number {\r\n    return Math.abs(a[0] - b[0]) + Math.abs(a[1] - b[1]);\r\n  }\r\n\r\n  /**\r\n   * 获取某个节点的所有邻居节点\r\n   * @param node - 当前节点\r\n   * @param end - 目标点\r\n   * @returns 邻居节点的位置数组和方向\r\n   */\r\n  private getNeighbors(node: PathNode, end: GridPoint): [GridPoint, GridPoint][] {\r\n    const [x, y] = node.position;\r\n    const directions: GridPoint[] = [\r\n      [0, 1], [1, 0], [0, -1], [-1, 0], // 上下左右四个方向\r\n    ];\r\n    const list = directions.map(([dx, dy]) => ([[x + dx, y + dy], [dx, dy]] as [GridPoint, GridPoint]));\r\n    return list.filter(([pos]) => end[0] === pos[0] && end[1] === pos[1]\r\n      ? this._grid.isInBounds(pos[0], pos[1])\r\n      : this._grid.isValid(pos[0], pos[1]));\r\n  }\r\n\r\n  /**\r\n   * 执行 A* 算法，查找从起点到终点的最短路径\r\n   * @param start - 起点 [x, y]\r\n   * @param end - 终点 [x, y]\r\n   * @returns 最短路径的数组，如果无路径则返回空数组\r\n   */\r\n  public findPath(start: GridPoint, end: GridPoint): GridPoint[] {\r\n    const openList: PathNode[] = [];        // 打开列表，存储待处理的节点\r\n    const closedSet: Set<string> = new Set(); // 关闭列表，存储已处理的节点\r\n\r\n    // 创建起点节点并加入打开列表\r\n    const startNode = new PathNode(start, 0, this.heuristic(start, end));\r\n    openList.push(startNode);\r\n\r\n    while (openList.length > 0) {\r\n      // 按照 f 值 + 拐点数排序，选择最优的节点\r\n      openList.sort((a, b) => (a.f + a.getTurnCount()) - (b.f + b.getTurnCount()));\r\n      const currentNode = openList.shift()!; // 当前节点\r\n\r\n      // 如果到达终点，则回溯路径\r\n      if (currentNode.position[0] === end[0] && currentNode.position[1] === end[1]) {\r\n        const path: GridPoint[] = [];\r\n        let node: PathNode | null = currentNode;\r\n        while (node) {\r\n          path.unshift(node.position); // 将路径反向插入\r\n          node = node.parent;\r\n        }\r\n        return path;\r\n      }\r\n\r\n      // 将当前节点标记为已处理\r\n      closedSet.add(currentNode.position.toString());\r\n\r\n      // 遍历当前节点的邻居\r\n      const neighbors = this.getNeighbors(currentNode, end);\r\n      for (const [neighborPos, direction] of neighbors) {\r\n        if (closedSet.has(neighborPos.toString())) {\r\n          continue; // 如果邻居已处理，跳过\r\n        }\r\n\r\n        const g = currentNode.g + 1; // 从起点到邻居的实际代价\r\n        const h = this.heuristic(neighborPos, end); // 邻居到目标的启发式代价\r\n        const existingNode = openList.find(\r\n          node => node.position[0] === neighborPos[0] && node.position[1] === neighborPos[1]\r\n        );\r\n\r\n        // 如果邻居节点不在打开列表或新的路径代价更低\r\n        if (!existingNode || g < existingNode.g) {\r\n          if (existingNode) {\r\n            // 如果邻居节点已存在，移除旧的节点\r\n            openList.splice(openList.indexOf(existingNode), 1);\r\n          }\r\n          // 将邻居节点加入打开列表\r\n          openList.push(new PathNode(neighborPos, g, h, currentNode, direction));\r\n        }\r\n      }\r\n    }\r\n\r\n    // 如果打开列表为空且未找到路径，则返回空数组\r\n    return [];\r\n  }\r\n}\r\n","/**\r\n * @date 2025/1/3\r\n */\r\n\r\n// 定义网格单元类型\r\nexport enum CellType {\r\n  WALKABLE = 0, // 可行走\r\n  OBSTACLE = 1, // 障碍\r\n}\r\n\r\n// 表示网格中点的坐标类型 [x, y]\r\nexport type GridPoint = [number, number];\r\n","import { CellType } from \"./AStarConst\";\r\n\r\n/**\r\n * Grid 类表示一个网格，在路径搜索中用于检查节点是否有效。\r\n */\r\nexport class Grid {\r\n  private readonly _gridData: CellType[][]; // 网格数据\r\n\r\n  /**\r\n   * 构造函数\r\n   * @param gridData - 二维数组，表示网格\r\n   */\r\n  constructor(gridData: CellType[][]) {\r\n    this._gridData = gridData;\r\n  }\r\n\r\n  /**\r\n   * 检查一个点是否在网格内且可通行\r\n   * @param x - 点的 x 坐标\r\n   * @param y - 点的 y 坐标\r\n   * @returns 如果点有效且可通行，返回 true，否则返回 false\r\n   */\r\n  public isValid(x: number, y: number): boolean {\r\n    return this.isInBounds(x, y) && this._gridData[x][y] === CellType.WALKABLE;\r\n  }\r\n\r\n  /**\r\n   * 判断给定坐标是否在网格边界内\r\n   * @param x 坐标 x\r\n   * @param y 坐标 y\r\n   * @returns 如果在边界内返回 true，否则返回 false\r\n   */\r\n  public isInBounds(x: number, y: number): boolean {\r\n    return x >= 0 && x < this.rows && y >= 0 && y < this.cols;\r\n  }\r\n\r\n  public getValue(x: number, y: number): CellType {\r\n    if (!this.isInBounds(x, y)) {\r\n      throw new Error(`Grid.getValue(${x}, ${y}) are out of bounds.`);\r\n    }\r\n    return this._gridData[x][y];\r\n  }\r\n\r\n  public setValue(x: number, y: number, val: CellType): boolean {\r\n    if (!this.isInBounds(x, y)) {\r\n      throw new Error(`Grid.getValue(${x}, ${y}) are out of bounds.`);\r\n    }\r\n    this._gridData[x][y] = val;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 获取网格的宽度\r\n   * @returns 网格的列数\r\n   */\r\n  public get cols(): number {\r\n    return this._gridData[0].length;\r\n  }\r\n\r\n  /**\r\n   * 获取网格的高度\r\n   * @returns 网格的行数\r\n   */\r\n  public get rows(): number {\r\n    return this._gridData.length;\r\n  }\r\n}\r\n","/**\r\n * @date 2025/1/3\r\n */\r\nimport { AStar } from \"./AStar\";\r\nimport { Grid } from \"./Grid\";\r\nimport { CellType, GridPoint } from \"./AStarConst\";\r\n\r\nexport class AStarMgr {\r\n  private _grid: Grid;\r\n  private _astar: AStar;\r\n\r\n  constructor(data: number[][]) {\r\n    this.createAStar(data);\r\n  }\r\n\r\n  private createAStar(data: number[][]): void {\r\n    this._grid = new Grid(data);\r\n    this._astar = new AStar(this._grid);\r\n  }\r\n\r\n  public updateGrid(point: GridPoint, value: CellType): boolean {\r\n    if (this._grid) {\r\n      return this._grid.setValue(point[0], point[1], value);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public findPath(start: GridPoint, end: GridPoint): GridPoint[] {\r\n    if (this._astar) {\r\n      return this._astar.findPath(start, end);\r\n    }\r\n    return [];\r\n  }\r\n}","import { CardType, FengType } from \"@def/mahjong\";\nimport { AStarMgr } from \"@base/astar\";\n\n/**\n * @date 2024/12/22\n */\n\nconst CARD_COUNT = 4;\nconst CARD_NUM_LIST: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconst CARD_TYPE_LIST: CardType[] = [CardType.TONG, CardType.TIAO];\nconst FENG_TYPE_LIST: FengType[] = [FengType.ZHONG, FengType.FA];\nconst CardTypeName = {\n  [CardType.TONG]: \"tong\",\n  [CardType.WAN]: \"wan\",\n  [CardType.TIAO]: \"tiao\",\n  [CardType.FENG]: \"feng\",\n};\n// 卡牌格式 [牌类型, 牌数字]\ntype CardData = [CardType, number]\ntype CardPoint = { row: number, col: number }\n\nexport class MahjongModel {\n  public row = 8;\n  public col = 10;\n  public data: MahjongCardData[][] = [];\n\n  public updateRowCol(row: number = 8, col: number = 10): void {\n    this.row = row;\n    this.col = col;\n    this.data = [];\n  }\n\n  // 麻将牌类型集\n  private getMahjongCardList(): CardData[] {\n    const list: CardData[] = [];\n    for (let type of CARD_TYPE_LIST) {\n      for (let num of CARD_NUM_LIST) {\n        list.push([type, num]);\n      }\n    }\n    for (let feng of FENG_TYPE_LIST) {\n      list.push([CardType.FENG, feng]);\n    }\n    return list;\n  }\n\n  private _rowColStrList: string[];\n\n  private getRowColStrList(): string[] {\n    if (!this._rowColStrList) {\n      const rst: string[] = [];\n      for (let i = 0; i < this.row; i++) {\n        for (let j = 0; j < this.col; j++) {\n          rst[i * this.col + j] = i + \"_\" + j;\n        }\n      }\n      this._rowColStrList = rst;\n    }\n    return this._rowColStrList;\n  }\n\n  private getRandomRowCol(): number[] {\n    const list = this.getRowColStrList();\n    const idx = Math.random() * list.length >> 0;\n    const listItem = list.splice(idx, 1)[0];\n    return listItem.split(\"_\").map(item => +item);\n  }\n\n  public getMahjongData(): MahjongCardData[][] {\n    const list = this.getMahjongCardList();\n    for (let item of list) {\n      for (let i = 0; i < CARD_COUNT; i++) {\n        const randomItemAry = this.getRandomRowCol();\n        if (!this.data[randomItemAry[0]]) {\n          this.data[randomItemAry[0]] = [];\n        }\n        const cardData = new MahjongCardData();\n        cardData.updateInfo(randomItemAry[0], randomItemAry[1], item);\n        this.data[randomItemAry[0]][randomItemAry[1]] = cardData;\n      }\n    }\n    return this.data;\n  }\n\n  // 移除牌\n  public deleteCard(index: number): boolean {\n    const row = (index / 10 >> 0);\n    const col = index % 10;\n    if (!this.data || !this.data[row]) {\n      return false;\n    }\n    this.data[row][col] = undefined;\n    if (this._dfsAry) {\n      this._dfsAry[row + 1][col + 1] = 0;\n    }\n    return true;\n  }\n\n  private _dfsAry: number[][];\n  private _astarMgr: AStarMgr;\n\n  // dfs检查是否可以消除\n  public checkDfs(startData: MahjongCardData, targetData: MahjongCardData): boolean {\n    if (!startData || !targetData || !startData.checkSame(targetData)) {\n      return false;\n    }\n    const startPoint: CardPoint = { row: startData.row + 1, col: startData.col + 1 };\n    const targetPoint: CardPoint = { row: targetData.row + 1, col: targetData.col + 1 };\n    if (!this._dfsAry) {\n      const dfsAry: number[][] = [];\n      for (let i = 0; i < this.row + 2; i++) {\n        for (let j = 0; j < this.col + 2; j++) {\n          if (!dfsAry[i]) {\n            dfsAry[i] = [];\n          }\n          if (i === 0 || j === 0 || i === this.row + 1 || j === this.col + 1) {\n            dfsAry[i][j] = 0;\n          } else {\n            const cardData = this.data[i - 1][j - 1];\n            dfsAry[i][j] = cardData ? 1 : 0;\n          }\n        }\n      }\n      this._dfsAry = dfsAry;\n      this._astarMgr = new AStarMgr(this._dfsAry);\n    }\n    const paths = this._astarMgr.findPath([startPoint.row, startPoint.col], [targetPoint.row, targetPoint.col]);\n    console.log(paths);\n    return !!paths.length;\n  }\n}\n\n/**单张麻将的数据*/\nexport class MahjongCardData {\n  public row: number;\n  public col: number;\n  public cardData: CardData;\n\n  public updateInfo(row: number, col: number, data: CardData): void {\n    this.row = row;\n    this.col = col;\n    this.cardData = data;\n  }\n\n  public getIcon(): string {\n    if (!this.cardData) {\n      return \"\";\n    }\n    return `mahjong/${CardTypeName[this.cardData[0] + \"\"] + this.cardData[1]}.png`;\n  }\n\n  public checkSame(data: MahjongCardData): boolean {\n    if (!data || !data.cardData) {\n      return false;\n    }\n    return data.cardData[0] === this.cardData[0] && data.cardData[1] === this.cardData[1];\n  }\n}\n","import { MahjongModel } from \"./MahjongModel\";\n\n/**\n * @date 2024/12/22\n */\nexport class MahjongProxy {\n  private static _instance: MahjongProxy;\n  private _model: MahjongModel;\n\n  public static ins(): MahjongProxy {\n    if (!this._instance) {\n      this._instance = new MahjongProxy();\n      window[this._instance.constructor.name] = this._instance;\n    }\n    return this._instance;\n  }\n\n  public get model(): MahjongModel {\n    if (!this._model) {\n      this._model = new MahjongModel();\n    }\n    return this._model;\n  }\n}","import TimeLine = Laya.TimeLine;\nimport UIComponent = Laya.UIComponent;\nimport Handler = Laya.Handler;\nimport Event = Laya.Event;\n\n/**\n * @date 2024/12/23\n */\nexport default class ComUtils {\n  /** 组件抖动 */\n  public static setTween(box: UIComponent, isTween = true, callback?: Handler): TimeLine | undefined {\n    if (!box) {\n      return undefined;\n    }\n    let timeLine = <TimeLine>box[\"_timeLine_\"];\n    if (timeLine) {\n      timeLine.reset();\n      if (!isTween) {\n        timeLine.destroy();\n        return undefined;\n      }\n    } else {\n      box[\"_timeLine_\"] = timeLine = new TimeLine();\n    }\n    timeLine.to(box, { rotation: 10 }, 100)\n      .to(box, { rotation: -10 }, 100)\n      .to(box, { rotation: 5 }, 100)\n      .to(box, { rotation: -5 }, 100)\n      .to(box, { rotation: 0 }, 50)\n      .play();\n    timeLine.on(Event.COMPLETE, this, () => {\n      if (callback) {\n        callback.run();\n      }\n    });\n    return timeLine;\n  }\n\n  public static setScale(box: UIComponent, scale = 1): void {\n    if (!box) {\n      return;\n    }\n    if (box.scaleX !== scale) {\n      box.scaleX = box.scaleY = scale;\n    }\n  }\n}","import { ui } from \"@ui/layaMaxUI\";\nimport { MahjongProxy } from \"./MahjongProxy\";\nimport { MahjongCardData } from \"./MahjongModel\";\nimport ComUtils from \"@base/utils/ComUtils\";\nimport List = Laya.List;\nimport Handler = Laya.Handler;\nimport Box = Laya.Box;\nimport Image = Laya.Image;\nimport Event = Laya.Event;\nimport SoundManager = Laya.SoundManager;\n\ntype BoxCard = Box & {\n  boxCard: Box & {\n    img: Image;\n  }\n}\n\n/**\n * @date 2024/12/22\n */\nexport default class MahjongMdr extends ui.modules.mahjong.MahjongUI {\n  private _proxy: MahjongProxy;\n  private _list: List;\n  private _preIdx = -1;\n\n  constructor() {\n    super();\n    this._proxy = MahjongProxy.ins();\n  }\n\n  createChildren() {\n    super.createChildren();\n    this._list = <List>this.getChildByName(\"listItem\");\n    this._list.renderHandler = Handler.create(this, this.onRenderListItem, undefined, false);\n\n    Laya.loader.load(\"res/atlas/mahjong.atlas\", Laya.Handler.create(this, this.onLoadedSuccess));\n    SoundManager.autoStopMusic = false;\n    SoundManager.playMusic(\"audio/mixkit-tick-tock-clock-timer-music.wav\", 0);\n  }\n\n  onOpened(param: any) {\n    super.onOpened(param);\n  }\n\n  onClosed(type?: string) {\n    super.onClosed(type);\n    this._preIdx = -1;\n  }\n\n  private onLoadedSuccess(): void {\n    console.log(\"11111 onLoadedSuccess\");\n    const list = this._proxy.model.getMahjongData();\n    this._list.array = list.reduce((a, b) => a.concat(b));\n    console.log(list);\n  }\n\n  private onRenderListItem(item: BoxCard, index: number): void {\n    const img = <Image>item.getChildByName(\"boxCard\").getChildByName(\"img\");\n    const data: MahjongCardData = item.dataSource;\n    if (!data) {\n      img.skin = \"\";\n      return;\n    }\n    item.tag = data;\n    img.skin = data.getIcon();\n\n    item.on(Event.CLICK, this, this.onClickItem, [index]);\n    item.on(Event.MOUSE_DOWN, this, this.onClickMouseDown, [index]);\n    item.on(Event.MOUSE_UP, this, this.onClickMouseUp, [index]);\n    item.on(Event.MOUSE_OUT, this, this.onClickMouseUp, [index]);\n  }\n\n  private onClickItem(index: number): void {\n    SoundManager.playSound(\"audio/mixkit-flop.wav\");\n    if (this._preIdx > -1 && index !== this._preIdx) {\n      const curItemData: MahjongCardData = this._list.getItem(index);\n      const preItemData: MahjongCardData = this._list.getItem(this._preIdx);\n      const curItem = <BoxCard>this._list.getCell(index).getChildByName(\"boxCard\");\n      const preItem = <BoxCard>this._list.getCell(this._preIdx).getChildByName(\"boxCard\");\n      if (curItemData.checkSame(preItemData) && this._proxy.model.checkDfs(curItemData, preItemData)) {\n        ComUtils.setScale(curItem, 0.45);\n        this.clearCardItem(curItem, index);\n        this.clearCardItem(preItem, this._preIdx);\n      } else {\n        ComUtils.setScale(curItem, 0.4);\n        ComUtils.setScale(preItem, 0.4);\n      }\n      this._preIdx = -1;\n    } else {\n      this._preIdx = index;\n      const item = <BoxCard>this._list.getCell(index).getChildByName(\"boxCard\");\n      // ComUtils.setTween(item);\n      ComUtils.setScale(item, 0.45);\n    }\n  }\n\n  private clearCardItem(box: BoxCard, index: number): void {\n    const idx = index;\n    ComUtils.setTween(box, true, Handler.create(this, () => {\n      const curImg = box.getChildByName(\"img\") as Image;\n      curImg.skin = \"\";\n      this._proxy.model.deleteCard(idx);\n    }));\n  }\n\n  private onClickMouseDown(index: number): void {\n    //\n  }\n\n  private onClickMouseUp(index: number): void {\n    //\n  }\n}","/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\nimport MahjongMdr from \"./modules/mahjong/MahjongMdr\"\n/*\n* 游戏初始化配置;\n*/\nexport default class GameConfig{\n    static width:number=640;\n    static height:number=1136;\n    static scaleMode:string=\"showall\";\n    static screenMode:string=\"none\";\n    static alignV:string=\"middle\";\n    static alignH:string=\"center\";\n    static startScene:any=\"modules/mahjong/Mahjong.scene\";\n    static sceneRoot:string=\"\";\n    static debug:boolean=false;\n    static stat:boolean=false;\n    static physicsDebug:boolean=false;\n    static exportSceneToJson:boolean=true;\n    constructor(){}\n    static init(){\n        var reg: Function = Laya.ClassUtils.regClass;\n        reg(\"modules/mahjong/MahjongMdr.ts\",MahjongMdr);\n    }\n}\nGameConfig.init();","import GameConfig from \"./GameConfig\";\nclass Main {\n\tconstructor() {\n\t\t//根据IDE设置初始化引擎\t\t\n\t\tif (window[\"Laya3D\"]) Laya3D.init(GameConfig.width, GameConfig.height);\n\t\telse Laya.init(GameConfig.width, GameConfig.height, Laya[\"WebGL\"]);\n\t\tLaya[\"Physics\"] && Laya[\"Physics\"].enable();\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\n\t\tLaya.stage.alignV = GameConfig.alignV;\n\t\tLaya.stage.alignH = GameConfig.alignH;\n\t\t//兼容微信不支持加载scene后缀场景\n\t\tLaya.URL.exportSceneToJson = GameConfig.exportSceneToJson;\n\n\t\t//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）\n\t\tif (GameConfig.debug || Laya.Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\n\t\tif (GameConfig.physicsDebug && Laya[\"PhysicsDebugDraw\"]) Laya[\"PhysicsDebugDraw\"].enable();\n\t\tif (GameConfig.stat) Laya.Stat.show();\n\t\tLaya.alertGlobalError(true);\n\n\t\t//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程\n\t\tLaya.ResourceVersion.enable(\"version.json\", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);\n\t}\n\n\tonVersionLoaded(): void {\n\t\t//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图\n\t\tLaya.AtlasInfoManager.enable(\"fileconfig.json\", Laya.Handler.create(this, this.onConfigLoaded));\n\t}\n\n\tonConfigLoaded(): void {\n\t\t//加载IDE指定的场景\n\t\tGameConfig.startScene && Laya.Scene.open(GameConfig.startScene);\n\t}\n}\n//激活启动类\nnew Main();\n"],"names":["Event"],"mappings":"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"}